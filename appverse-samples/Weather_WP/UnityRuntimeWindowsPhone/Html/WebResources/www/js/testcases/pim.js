
var testContact = new Object();
testContact.ID = "ID_1";
testContact.Name = "appverse";
testContact.Firstname = "MyContactFirstname";
testContact.Lastname = "MyContactLastname";
testContact.DisplayName = "appverse";
testContact.Group = "MyContactGroup";
testContact.Company = "GFT";
testContact.JobTitle = "MyContactJobTitle";
testContact.Department = "MyContactDepartment";
var testContactWebsites = new Array();
testContactWebsites[0] = "http://appverse.org/";
testContact.WebSites = testContactWebsites;
testContact.Notes = "My contact's notes";
var testContactPhones = new Array();
var testContactPhone1 = new Object();
testContactPhone1.Type = 1; //Other, Mobile, FixedLine, Work, HomeFax, WorkFax, Pager
testContactPhone1.Number = "+34666111111";
testContactPhones[0] = testContactPhone1;
var testContactPhone2 = new Object();
testContactPhone2.Type = 0; //Other, Mobile, FixedLine, Work, HomeFax, WorkFax, Pager
testContactPhone2.IsPrimary = true;
testContactPhone2.Number = "+34666222222";
testContactPhones[1] = testContactPhone2;
testContact.Phones = testContactPhones;
var testContactEmails = new Array();
var testContactEmail1 = new Object();
testContactEmail1.Type = 2; //Other, Personal, Work, HomeOffice
testContactEmail1.Address = "unityversal@gmail.com";
testContactEmails[0] = testContactEmail1;
testContact.Emails = testContactEmails;
var testContactAddresses = new Array();
var testContactAddress1 = new Object();
testContactAddress1.Type = 3; // other(0), personal(1), work (2), homeoffice(3)
testContactAddress1.Address = "Park Avenue";
testContactAddress1.AddressNumber = "43";
testContactAddress1.City = "New York";
testContactAddress1.Country = "United States";
testContactAddress1.PostCode = "08210";
testContactAddresses[0] = testContactAddress1;
var testContactAddress2 = new Object();
testContactAddress2.Type = 2; // other(0), personal(1), work (2), homeoffice(3)
testContactAddress2.Address = "Vial Interpolar";
testContactAddress2.AddressNumber = "s/n";
testContactAddress2.City = "Sant Cugat";
testContactAddress2.Country = "Spain";
testContactAddress2.PostCode = "08174";
testContactAddresses[1] = testContactAddress2;
testContact.Addresses = testContactAddresses;
testContact.PhotoBase64Encoded = '';
/*  DO NOT USE "Photo" FIELD AS BYTE[] TYPES ARE NOT WELL DECODED ON JSON PARSERS
var directoryRootPathForDocuments = Appverse.FileSystem.GetDirectoryRoot().FullName;
var documentsDirectoryIndexof = directoryRootPathForDocuments.indexOf("/Documents");
var directoryRootPathForApp = directoryRootPathForDocuments.substring(0,documentsDirectoryIndexof);
var contactPhotoPath = directoryRootPathForApp + "/AppverseUI.app/WebResources/www/images/rainy.png";
var contactPhotoFileData = new Object();
contactPhotoFileData.FullName = contactPhotoPath;
testContact.Photo = Appverse.FileSystem.ReadFile(contactPhotoFileData);
*/

var testContactQuery = {};
testContactQuery.Column = Appverse.Pim.CONTACTS_QUERY_COLUMN_NAME;
testContactQuery.Value = "appverse";
testContactQuery.Condition = Appverse.Pim.CONTACTS_QUERY_CONDITION_CONTAINS;

var testContactQuery_PhoneAvailable = {};
testContactQuery_PhoneAvailable.Column = Appverse.Pim.CONTACTS_QUERY_COLUMN_PHONE;
testContactQuery_PhoneAvailable.Condition = Appverse.Pim.CONTACTS_QUERY_CONDITION_AVAILABLE;

var newTestContact = eval('('+JSON.stringify(testContact)+')'); // clone object.
newTestContact.Name = "UpdatedName";

var testCalendarDate = new Object();
testCalendarDate.Year = 2014;
testCalendarDate.Month = 6;
testCalendarDate.Day = 22;
testCalendarDate.Hour = 19;
testCalendarDate.Minute = 15;
testCalendarDate.Second = 30;

var testCalendarStartDate = new Object();
testCalendarStartDate.Year = 2014;
testCalendarStartDate.Month = 6;
testCalendarStartDate.Day = 20;

var testCalendarEndDate = new Object();
testCalendarEndDate.Year = 2014;
testCalendarEndDate.Month = 11;
testCalendarEndDate.Day = 30;

var testCalendarNewStartDate = new Object();
testCalendarNewStartDate.Year = 2014;
testCalendarNewStartDate.Month = 8;
testCalendarNewStartDate.Day = 28;
testCalendarNewStartDate.Hour = 9;
testCalendarNewStartDate.Minute = 25;
testCalendarNewStartDate.Second = 30;

var testCalendarNewEndDate = new Object();
testCalendarNewEndDate.Year = 2014;
testCalendarNewEndDate.Month = 11;
testCalendarNewEndDate.Day = 31;
testCalendarNewEndDate.Hour = 16;
testCalendarNewEndDate.Minute = 35;
testCalendarNewEndDate.Second = 40;


var testCalendarEntry = new Object();
testCalendarEntry.Uid = "Uid_1";
testCalendarEntry.Type = 1; //Other(0), Birthday(1), CalDAV(2), Exchange(3), IMap(4), Local(5), Subscription(6)
testCalendarEntry.Title = "Calendar Entry Title";
testCalendarEntry.IsEditable = true;
testCalendarEntry.IsAllDayEvent = true;
testCalendarEntry.Location = "Event's Location";
testCalendarEntry.StartDate = testCalendarStartDate;
testCalendarEntry.EndDate = testCalendarEndDate;
testCalendarEntry.Notes ="Notes for calendar entry";
testCalendarEntry.Attendees = new Array();
var testAttendee1 = new Object();
testAttendee1.Name = "Attendee_1 name";
testAttendee1.Address = "Attendee_1 address";
testAttendee1.Status = 1; // NeedsAction(0), Accepted(1), Declined(2), Tentative(3)
testCalendarEntry.Attendees[0] = testAttendee1;
var testAttendee2 = new Object();
testAttendee2.Name = "Attendee_2 name";
testAttendee2.Address = "Attendee_2 address";
testAttendee2.Status = 0;
testCalendarEntry.Attendees[1] = testAttendee2;
testCalendarEntry.Alarms = new Array();
testAlarm1 = new Object();
testAlarm1.Trigger = new Object()
testAlarm1.Trigger.Year = 2014;
testAlarm1.Trigger.Month = 7;
testAlarm1.Trigger.Day = 29;
testAlarm1.EmailAddress = "email@address.alarm1";
testAlarm1.Sound = "Alarm_1 sound";
testAlarm1.Action = 0; //Dispaly(0), Email(1), Sound(2)
testCalendarEntry.Alarms[0] = testAlarm1;
testAlarm2 = new Object();
testAlarm2.Trigger = new Object()
testAlarm2.Trigger.Year = 2014;
testAlarm2.Trigger.Month = 11;
testAlarm2.Trigger.Day = 29;
testAlarm2.EmailAddress = "email@address.alarm2";
testAlarm2.Sound = "Alarm_2 sound";
testAlarm2.Action = 1; //Dispaly(0), Email(1), Sound(2)
testCalendarEntry.Alarms[1] = testAlarm2;
testCalendarEntry.IsRecurrentEvent = true;
testCalendarEntry.RecurrenceNumber = 1;
testCalendarEntry.Recurrence = new Object();
testCalendarEntry.Recurrence.Type = 0 //Weekly(0), Fortnightly(1), FourWeekly(2), Montly(3), Yearly(4)
testCalendarEntry.Recurrence.Interval = 2;
//testCalendarEntry.Recurrence.DayOfTheWeek = 3;
//testCalendarEntry.Recurrence.EndDate = new Object();
//testCalendarEntry.Recurrence.EndDate.Year = 2014;
//testCalendarEntry.Recurrence.EndDate.Month = 7;
//testCalendarEntry.Recurrence.EndDate.Day = 29;

//********** UI COMPONENTS



//********** PIM TESTCASES
var TestCase_Pim_Contacts = [Appverse.Pim,
	[['ListContacts','{"param1":' + JSON.stringify(testContactQuery) + '}'],
	['ListContacts#ALL','{"param1":null}'],
	['ListContacts#PhoneAvailable','{"param1":' + JSON.stringify(testContactQuery_PhoneAvailable) + '}'],
	['GetContact','{"param1":"ID"}'],
	['CreateContact','{"param1":' + JSON.stringify(testContact) + '}'],
	['UpdateContact','{"param1":' + JSON.stringify(testContact.ID) +',"param2":' + JSON.stringify(newTestContact) + '}'],
	['DeleteContact','{"param1":' + JSON.stringify(testContact) + '}']]];
	
var TestCase_Pim_Calendar = [Appverse.Pim,
	[['ListCalendarEntriesByDate','{"param1":' + JSON.stringify(testCalendarDate) + '}'],
	['ListCalendarEntriesByDateRange','{"param1":' + JSON.stringify(testCalendarStartDate) +',"param2":' + JSON.stringify(testCalendarEndDate) + '}'],
	['CreateCalendarEntry','{"param1":' + JSON.stringify(testCalendarEntry) + '}'],
	['DeleteCalendarEntry','{"param1":' + JSON.stringify(testCalendarEntry) + '}'],
	['MoveCalendarEntry','{"param1":' + JSON.stringify(testCalendarEntry) +',"param2":' + JSON.stringify(testCalendarNewStartDate) + ',"param3":' + JSON.stringify(testCalendarNewEndDate) + '}']]];	
	
//********** HANDLING CALLBACKS

Appverse.Pim.onListContactsEnd = function(contacts) {
	//Showcase.app.getController('Main').toast("Contacts found: " + (contacts!=null?contacts.length:0));
        Showcase.app.getController('Main').console(feedObj("Appverse.Pim.onListContactsEnd","Appverse.Pim.onListContactsEnd",contacts));//.length?contacts:"No Contact Found"
};

Appverse.Pim.onContactFound = function(contact) {
	console.log("Appverse.Pim.onContactFound");
	//submitCallback(contact, "Appverse.Pim.onContactFound");
        Showcase.app.getController('Main').console(feedObj("Appverse.Pim.onContactFound","Appverse.Pim.onContactFound",contact));
};

Appverse.Pim.onListCalendarEntriesEnd = function(calendarEntries) {
	//Showcase.app.getController('Main').toast("Calendar Entries found: " + (calendarEntries!=null?calendarEntries.length:0));
        Showcase.app.getController('Main').console(feedObj("Appverse.Pim.onListCalendarEntriesEnd","Appverse.Pim.onListCalendarEntriesEnd","Calendar Entries found: " + (calendarEntries!=null?calendarEntries.length:0)));
};

Appverse.Pim.onAccessToContactsDenied = function() {
	console.log("Appverse.Pim.onAccessToContactsDenied");
	Showcase.app.getController('Main').console(feedObj("Appverse.Pim.onAccessToContactsDenied","Appverse.Pim.onAccessToContactsDenied","Access to Contacts denied by user"));
};


