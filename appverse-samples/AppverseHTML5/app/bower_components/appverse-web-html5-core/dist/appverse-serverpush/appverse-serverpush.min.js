/*! appverse-web-html5-core - v0.5.0-dev - */
!function(){"use strict";angular.module("appverse.serverPush",["appverse.socket.io","appverse.configuration"]).run(["$log",function(a){a.info("appverse.serverPush run")}])}(),function(){"use strict";angular.module("appverse.socket.io",["appverse.configuration"])}(),function(){"use strict";angular.module("appverse.socket.io").provider("Socket",["SERVERPUSH_CONFIG",function(a){var b,c="socket:";this.$get=["$rootScope","$timeout",function(d,e){var f=b||io.connect(a.BaseUrl,{resource:a.Resource,"connect timeout":a.ConnectTimeout,"try multiple transports":a.TryMultipleTransports,reconnect:a.Reconnect,"reconnection delay":a.ReconnectionDelay,"reconnection limit":a.ReconnectionLimit,"max reconnection attempts":a.MaxReconnectionAttempts,"sync disconnect on unload":a.SyncDisconnectOnUnload,"auto connect":a.AutoConnect,"flash policy port":a.FlashPolicyPort,"force new connection":a.ForceNewConnection}),g=function(a){return function(){var b=arguments;e(function(){a.apply(f,b)},0)}},h=function(a,b){f.on(a,g(b))},i=function(){f.removeAllListeners()},j={on:h,addListener:h,off:i,emit:function(a,b,c){c?f.emit(a,b,g(c)):f.emit(a,b)},forward:function(a,b){a instanceof Array==!1&&(a=[a]),b||(b=d),angular.forEach(a,function(a){var d=c+a,e=g(function(a){b.$broadcast(d,a)});b.$on("$destroy",function(){f.removeListener(a,e)}),f.on(a,e)})}};return j}],this.prefix=function(a){c=a},this.ioSocket=function(a){b=a}}])}(),function(){"use strict";angular.module("appverse.serverPush").factory("SocketFactory",["$rootScope","Socket",function(a,b){var c={};return c.listen=function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},c.sendMessage=function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})},c.unsubscribeCommunication=function(a){b.off(a())},c}])}(),function(){"use strict";angular.module("appverse.serverPush").factory("WebSocketFactory",["$log","WEBSOCKETS_CONFIG",function(a,b){var c={};return c.connect=function(a){if(!c.ws){var d;"WebSocket"in window?d=new WebSocket(a):"MozWebSocket"in window&&(d=new window.MozWebSocket(a)),d.onopen=function(){null!==d?(d.send(""),c.callback(b.WS_CONNECTED)):c.callback(b.WS_DISCONNECTED)},d.onerror=function(){c.callback(b.WS_FAILED_CONNECTION)},d.onmessage=function(a){c.callback(a.data)},d.onclose=function(){null!=d&&(d.close(),d=null)},c.ws=d}},c.send=function(b){a.debug("factory.ws: "+c.ws),c.ws.send(b)},c.subscribe=function(a){c.callback=a},c.disconnect=function(){c.ws.close()},c.status=function(){return null==c.ws||angular.isUndefined(c.ws)?WebSocket.CLOSED:c.ws.readyState},c.statusAsText=function(){var a=c.status();return a==WebSocket.CONNECTING?b.CONNECTING:a==WebSocket.OPEN?b.OPEN:a==WebSocket.CLOSING?b.WS_CLOSING:a==WebSocket.CLOSED?b.WS_CLOSED:b.WS_UNKNOWN},c}])}();
//# sourceMappingURL=appverse-serverpush.min.js.map